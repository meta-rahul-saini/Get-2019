#######################################
# 2.1 Insert sample data in StoreFront tables by using SQL files.
#####################################


###########################################
# 2.2 Display Id, Title, Category Title, Price of the products 
# which are Active and recently added products should be at top.
#############################################

select product_id,  product_title, category.category_name, unit_price from product inner join category 
                    on product.category_id = category.category_id  where product.status = 0 order by product.added_time desc;

#######################################
# 2.3 Display the list of products which don't have any images.
#######################################

select product_title from product where product_id not in ( select product_id from image);
                    
###################################
# 2.4 Display all Id, Title and Parent Category Title for all the Categories listed, 
# sorted by Parent Category Title and then Category Title. (If Category is top category 
# then Parent Category Title column should display “Top Category” as value.)
# Display Id, Title, Parent Category Title of all the leaf Categories (categories which are not 
# parent of any other category)
#####################################

# holds top category data
create view top_level as select category_id, category_name, CASE 
         WHEN parent_category_id IS NULL THEN 'Top Category' 
         ELSE parent_category_id 
       END AS parent_category_title from  category where parent_category_id is null;

# holds intermediate and leaf level data

create view low_level as select * from category where category_id not in (select category_id from category where parent_category_id is null);

select 
    low_level.category_id,
    low_level.category_name,
    category.category_name as parent_category_title
from
    low_level
        inner join
    category ON low_level.parent_category_id = category.category_id union select 
    category_id, category_name, parent_category_title
from
    top_level order by parent_category_title, category_name;  # order by parent_category_title and then 

#####################################
# 2.5 displays all the leaf categories
###################################

select * from category where category_id not in (select parent_category_id from category where parent_category_id is not null);

#####################################
# 2.6 displays info of all the product which falls under a particular category i.e. shoes here
#####################################

select product_title, unit_price, product_description  from product inner join product_category on product.product_id = product_category.product_id 
where category_id = (select category_id from category where category_name = 'shoes');

#######################################
# 2.7 Display the list of Products whose Quantity on hand (Inventory) is under 50.
########################################
select product_title from product where quantity < 50;
